<project default="all" name="jMESYS" basedir=".">
	<description>
		jMESYS is a Java Multiple Emulator SYStem
	</description>
        
	<!-- property file holding local data (installation directory, external libraries... -->
	<property file="resources/builder/local.prop" />

	<!-- place holding the version number -->
	<property file="resources/builder/version.prop" />

	<!-- place where we will put a runnable version of the program if we run "ant install" -->
	<!-- to change DESTDIR, modify resources/builder/local.prop-->
	<property name="DESTDIR" value="${basedir}/application" />
	<!-- places where we put files generated by JLex and Cups -->
	<!-- <property name="mdclexer" value="${basedir}/src/jMESYS/mdc/lex" /> -->

	<!-- <property name="mdcparser" value="${basedir}/src/jMESYS/mdc/parser" /> -->

	<!-- destination directory for jMESYS classes -->

	<property name="jMESYSCLASSES" value="${basedir}/build/classes" />
	
	<!-- destination directory for jMESYS Database -->

	<!-- <property name="jMESYSDB" value="${basedir}/" /> -->
	

	<!--
		 For various reasons, such as software licences,
		 a number of libraries used by jMESYS are not distributed with it.
		 These libraries are not part of the finished product, but they are
		 used to build the installer.
		
		The installer itself is IzPack, which can be downloaded at http://www.izforge.com/izpack/
		
		For building a mac-aware installation, we use "jarbundler", which is under the GPL
		
		Note that all libraries used in jMESYS will be available in source form on the jMESYS site
		(http://www.iut.univ-paris8.fr/~rosmord/jMESYS/download/thirdPartyLibraries/)
		
		If you want to build the installer, change the values of IZPACK and JARBUNDLER
		in resources/builder/local.prop
	-->


	<!--
	  libraries used by jMESYS (and thus needed to compile it) 
	  -->
	<path id="myLib">
		<!-- <fileset dir="${generallibs}">
			<include name="*.jar" />
		</fileset> -->
		<fileset dir="${basedir}/lib">
			<include name="*.jar" />
		</fileset>
	</path>

	<!--
            path for running jMESYS
        -->
	<path id="runLib">
		<path refid="myLib" />
		<pathelement location="${basedir}/dist/jMESYS.jar" />
	</path>
	<!--
		  libraries used to *build* jMESYS (and not needed afterwards)
	  -->
	<path id="utilLib" path="./utilityLib">
	</path>

	<!--
	  *
	  * TARGETS DEFINITIONS
	  *
	-->

	<target name="all" depends="init, compile, installer" />

	<target name="init">
		<description>
			Prepare for jMESYS compilation. Create the framework, and test files dates.
		</description>
		<mkdir dir="resources/skeleton" />
		<copy todir=".">
			<fileset dir="resources/skeleton">
			</fileset>
		</copy>
		<copy todir="build/classes/jMESYSResources">
			<fileset dir="resources">
				<include name="userdoc/**" />
			</fileset>			
		</copy>
		
		<mkdir dir="build/classes/jMESYSResources/images" />
		<copy todir="build/classes/jMESYSResources">
			<fileset dir="resources">
				<include name="images/**" />
			</fileset>
		</copy>
		
		<!-- mkdir dir="build" -->
		<mkdir dir="${jMESYSCLASSES}" />
		<!-- <copy todir="build/classes/languages">
			<fileset dir="resources/languages">
			</fileset>
		</copy>-->
		<mkdir dir="dist" />
		<!-- <mkdir dir="reports" />
		<mkdir dir="utilityLib" /> -->
		
		<!-- check files dates -->
		<!-- <uptodate property="cupsAndLexAvailable" targetfile="utilityLib/JLex/Main.class">
			<srcfiles dir="utilitySource/JLex" includes="Main.java" />
		</uptodate>

		<uptodate property="mdcparserok" targetfile="${mdcparser}/MDCParse.java">
			<srcfiles dir="${GRAMMARS}" includes="MDCParse.y" />
		</uptodate>

		<uptodate property="mdclexok" targetfile="${mdclexer}/MDCLexAux.java">
			<srcfiles dir="${GRAMMARS}" includes="MDCLexAux.l" />
		</uptodate> -->
	</target>

	<!-- <target name="doLex" depends="init,utilityBuild" unless="mdclexok">
		<description>
			 Generate a lexical analyser for the manuel de codage.
			 The generated java files must then be copied and renamed.
		</description>
		<java classname="JLex.Main" fork="true" dir="${GRAMMARS}" classpathref="utilLib">
			<arg value="MDCLexAux.l" />
		</java>
		<move todir="${mdclexer}">
			<fileset dir="${GRAMMARS}" />
			<mapper type="glob" from="*.l.java" to="*.java" />
		</move>
	</target>

	<target name="doCup" depends="init,utilityBuild" unless="mdcparserok">
		<description>
			generate a syntactical parser for the manuel de codage.
		</description>
				<exec executable="/bin/sh" dir="grammars" output="reports/cupReport.txt">
			<arg value="-c" />
			<arg value="jcup -package jMESYS.mdc.parser -dump -interface -parser MDCParse -symbols MDCSymbols &lt; MDCParse.y" />
		</exec> 

		<java dir="${GRAMMARS}" classname="java_cup.Main" fork="true" classpath="${basedir}/lib" classpathref="utilLib" output="reports/cupReport.txt">
			<arg value="-package" />
			<arg value="jMESYS.mdc.parser" />
			<arg value="-dump" />
			<arg value="-interface" />
			<arg value="-parser" />
			<arg value="MDCParse" />
			<arg value="-symbols" />
			<arg value="MDCSymbols" />
			<arg value="MDCParse.y" />
		</java>
		<move file="${GRAMMARS}/MDCParse.java" todir="${mdcparser}" />
		<replace file="${GRAMMARS}/MDCSymbols.java" token="package jMESYS.mdc.parser;" value="package jMESYS.mdc.lex;" />
		<move file="${GRAMMARS}/MDCSymbols.java" todir="${mdclexer}" />
	</target> -->

	<target name="version" depends="init">
		<description>
    		Put some configuration items in place and automatically update the
			version number in each file
		</description>

		<echo message="Copying version number" />
		<filterset id="versionfilter">
			<filtersfile file="resources/builder/version.prop" />
		</filterset>
		<echo message="Copying install.xml" />
		<copy file="resources/templates/install_template.xml" tofile="dist/install.xml" overwrite="true">
			<filterset refid="versionfilter" />
		</copy>
		<echo message="Copying Version.java" />
		<copy file="resources/templates/jMESYSVersion.java" todir="src/jMESYS/gui" overwrite="true">
			<filterset refid="versionfilter" />
		</copy>
		<echo message="copying index of user documentation" />
		<copy file="resources/templates/indexUserDoc.html" tofile="resources/userdoc/index.html" overwrite="true">
			<filterset refid="versionfilter" />
		</copy>
		<!-- <copy file="resources/templates/LisezMoiCD.html" todir="dist" overwrite="true">
			<filterset refid="versionfilter" />
		</copy> -->
	</target>

	<!-- <target name="compile" depends="init, doLex, doCup, version"> -->
	<target name="compile" depends="init, version">

		<depend srcdir="src" destdir="build/classes" cache="depcache" closure="yes" />

		<javac srcdir="src" debug="true" deprecation="true" compiler="modern" source="1.8" encoding="ISO8859-1" destdir="build/classes" verbose="false" classpath="${basedir}/build/classes" classpathref="myLib" excludes="**/fonteditor/*,**/transducer/**" />

	</target>


	<target name="glyphs" depends="compile">
		<description>
			updates the glyphs list from resources
		</description>

	</target> 

	
	<target name="jMESYS.jar" depends="glyphs">
		<description>
			Build the distributable executable for jMESYS.
		</description>
		<!-- compute the manifest classpath -->
		<path id="jarpath">
			<fileset dir="lib">
				<include name="*.jar"/>
			</fileset>
		</path>
		<pathconvert property="manifest.classpath" pathsep=" ">
			<path refid="jarpath"/>
			<flattenmapper/>
		</pathconvert>
		
		<delete>
			<fileset dir="dist">
				<include name="**/*.jar" />
			</fileset>
		</delete>
		<mkdir dir="build/classes/bios" />
				<copy todir="build/classes/bios">
					<fileset dir="src/bios">
						<!-- <include name="src/bios/**" /> -->
					</fileset>
				</copy>
		<!-- build the jar -->
		<jar jarfile="dist/jMESYS.jar" excludes="**/CVS/**">
			<manifest>
				<attribute name="Main-Class" value="jMESYS.gui.jMESYS"/>
				<attribute name="Class-Path" value="${manifest.classpath}"/>
			</manifest>
			<!-- <fileset dir="utilityLib">
				<include name="java_cup/runtime/" />
			</fileset> -->
			<fileset dir="${jMESYSCLASSES}">
			</fileset>
			<!-- <fileset dir="${jMESYSDB}">
			</fileset> -->
		</jar>
	</target>

	<target name="javadoc" depends="init">
		
		<property environment="env"/>
		<mkdir dir="doc" />
		<echo message="javadoc -d doc -sourcepath ${basedir}/src" />
		<exec executable="${env.JAVA_HOME}/bin/javadoc" output="doc/doc">
		
		<arg line="-d doc -sourcepath ${basedir}/src -subpackages jMESYS"/>
		</exec>
		<!-- <javadoc access="public" author="true" destdir="doc" doctitle="jMESYS technical documentation" nodeprecated="false" nodeprecatedlist="false" noindex="false" nonavbar="false" notree="false" overview="./doc/overview.html" source="1.7" sourcepath="src" classpathref="myLib" splitindex="true" use="true" encoding="ISO8859-1" version="true">

			<fileset dir="src">
				<include name="**/*.java" />
			</fileset>

		</javadoc> -->
	</target>

	<target name="install" depends="jMESYS.jar">
		<description>
		Install a runnable version of jMESYS in the destdir directory.
		jMESYS will then be run with java -jar (YOUR INSTALL DIRECTORY)/libs/jMESYS.jar
		The prefered way to install jMESYS is to use an installer, but this require a bit more work.
		
		</description>
		<!-- be sure destination exists -->
		<mkdir dir="${DESTDIR}" />
		<!-- The libs directory -->
		<copy todir="${DESTDIR}/jMESYS/libs">
			<!-- <fileset dir="lib">
				<include name="*.jar" />
				<exclude name="cupruntime.jar" />
			</fileset> -->
			<fileset file="dist/jMESYS.jar">
			</fileset>
		</copy>
		<copy todir="${DESTDIR}/jMESYS">
			<fileset dir="resources">
				<include name="licenses/**" />
				<include name="images/**" />
				<include name="userdoc/**" />
				<!-- <include name="fonts/**" /> -->
			</fileset>
		</copy>

	</target>

	<target name="copyStub.jar" depends="init">
		<description>
			Build the "copyStub" library, used by the installer to :
				* test if we are on a macintosh
				* if it's the case
						* copy the Stub binary file available on macs in the application directory
				 		* move the application jar files in the application directory
				* if not, delete the mac hierarchy in the project.
		</description>
		<!-- <javac srcdir="resources/installer/copyStub" source="1.4" />
		<jar jarfile="dist/copyStub.jar" basedir="resources/installer/copyStub" excludes="*.java">
		</jar>
		<delete>
			<fileset dir="resources/installer/copyStub">
				<include name="**/*.class" />
			</fileset>
		</delete> -->
	</target>


	<target name="jarsources">
		<description>
			Build a source distribution of jMESYS.
		</description>
		<mkdir dir="dist" />
		<jar destfile="dist/jMESYSSources-${jMESYSVERSION}.jar" basedir="..">
			<include name="jMESYSalpha/lib/**" />
			<include name="jMESYSalpha/resources/**" />
			<include name="jMESYSalpha/src/**" />
			<include name="jMESYSalpha/utilitySource/**" />
			<include name="jMESYSalpha/build.xml" />
			<include name="jMESYSalpha/.classpath" />
			<include name="jMESYSalpha/.project" />
			<include name="jMESYSalpha/.cvsignore" />
			<include name="jMESYSalpha/README.txt" />
		</jar>
	</target>

	<target name="installer" depends="jMESYS.jar,version,copyStub.jar,mac,javadoc">
		<description>
			Build an Installer for jMESYS, using the great IzPack utility
			http://www.izforge.com/izpack/
			We use version 3.7.1
		</description>
		<!-- Allows us to use the IzPack Ant task -->
		<taskdef name="izpack" classpath="${IZPACK}" classname="com.izforge.izpack.ant.IzPackTask" />

		<!-- We call IzPack -->
		<echo message="Makes the installer using IzPack" />
		<izpack input="${basedir}/dist/install.xml" output="${basedir}/dist/jMESYS-install-${jMESYSVERSION}.jar" basedir="${basedir}/dist" izPackDir="${IZPACK}" />
		<!--			   installerType="standard-kunststoff"  -->

	</target>

	<target name="mac" depends="jMESYS.jar,version">
		<description>
			This target creates a file hierarchy suitable for a macintosh application.
			The jar files which should go in it will be moved during installation, 
			by the jMESYSInstall.CopyStub java class which is called by IzPack installer
			http://www.loomcom.com/jarbundler/
			we use version 1.3
		</description>
		<!-- <taskdef name="jarbundler" classpath="${JARBUNDLER}" classname="net.sourceforge.jarbundler.JarBundler" />

		<delete dir="macdist" />
		<mkdir dir="macdist" />
		<jarbundler dir="macdist" name="jMESYS" mainclass="jMESYS.dictionary.DictionaryPanel" verbose="true" antialiasedgraphics="true" antialiasedtext="true" growbox="true" stubfile="resources/installer/dummyStub" screenmenu="false" icon="resources/images/hibou.icns" version="${jMESYSVERSION}" jvmversion="1.4+" developmentregion="Spanish" vmoptions="-Xmx128m">
			<jarfileset dir="lib" includes="*.jar">
			</jarfileset>
			<jarfilelist dir="dist" files="jMESYS.jar" />
		</jarbundler>
		<delete>
			<fileset dir="macdist/jMESYS.app/Contents/Resources/Java">
				<include name="*.jar" />
			</fileset>
		</delete> -->
	</target> 

	<!--
	    
	-->
	<target name="utilityBuild" depends="init" unless="cupsAndLexAvailable">
		<description>
		    Compile the Source for any utility programs which we rely on
			Do this if you get a java.lang.UnsupportedClassVersionError from
			JLex or Cup when you switch development platforms, in particular
			switching from Linux to Windows 2000 seems to be problematic. 
			Rebuilding the utilities is fast and gets rid of the problem.
			
			Later note : Messages like java.lang.UnsupportedClassVersionError
			might be due to a clash between different jvm : classes compiled 
			with java 1.5 and re-read by java 1.4. This is solved by the
				source="1.4" attribute.
		</description>
		<!-- <echo message="Rebuilding JLex" />
		<delete failonerror="false">
			<fileset dir="utilityLib/JLex" includes="*.class" />
		</delete>
		<javac description="Rebuild Utilities" destdir="utilityLib" source="1.4" includes="Main.java" debug="true" deprecation="true" srcdir="utilitySource/JLex" />

		<echo message="Rebuilding CUP" />
		<delete failonerror="false">
			<fileset dir="utilityLib/java_cup" includes="*.class" />
			<fileset dir="utilityLib/java_cup/runtime" includes="*.class" />
		</delete>
		<javac description="Rebuild JCup" destdir="utilityLib" debug="true" deprecation="true" srcdir="utilitySource/java_cup" includes="*.java,runtime/*.java" source="1.4" />
		<echo message="building cup runtime library" />
		<jar destfile="lib/cupruntime.jar" basedir="utilityLib">
			<include name="java_cup/runtime/" />
		</jar> -->
	</target>

	<target name="clean">
		<description>
				Delete all generated classes.
			</description>
		<delete dir="build" />
		<delete dir="depcache" />
		<delete file="dist/install.xml" />
	</target>

	<target name="distclean" depends="clean">
		<description>
				Delete everything which can be regenerated.
		</description>
		
		<delete>
			<fileset dir="." defaultexcludes="no" includes="**/*~" />
		</delete>
		
		<delete dir="application" />
		<delete dir="build" />
		<delete dir="depcache" />
		<delete dir="dist" />
		<delete dir="doc" />
		<delete dir="macdist" />
		<delete dir="reports" />
		<delete dir="utilityLib" />
		
		<delete file="src/jMESYS/gui/Version.java" />
		<!-- <delete file="src/jMESYS/mdc/lex/MDCLexAux.java" />
		<delete file="src/jMESYS/mdc/lex/MDCSymbols.java" />
		<delete file="src/jMESYS/mdc/parser/MDCParse.java" /> -->
		<delete file="resources/userdoc/index.html" />
		<!-- <delete file="lib/cupruntime.jar" />
		
		<delete>
			<fileset dir=".">
				<include name="hs_err*" />
				<include name="DemoDrawer.png" />
				<include name="test.*" />
				<include name="LisezMoiCD.html" />
			</fileset>
		</delete> -->
	</target>

	<target name="run" depends="jMESYS.jar">
		<java classname="jMESYS.gui.jMESYS" spawn="true" fork="true" classpathref="runLib">
		</java>
	</target>
	
	<target name="profile" depends="jMESYS.jar">
		<description>Run jMESYS in a profiling environment for netbeans. Use jdk 1.7 at least to run.</description>
		<java classname="jMESYS.gui.jMESYS" fork="true" classpathref="runLib">
			<jvmarg line="${PROFILING_ARGS}"/>
		</java>
	</target>	
		
</project>
